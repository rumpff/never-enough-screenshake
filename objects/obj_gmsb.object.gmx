<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gmsb_post = 0;

//replace the tagid with your own games to test your scoreboard.
//replace the hashkey if you have the require hash setting enabled

//your tag id should go here, currently using my example id. 55a776162fbe814370381023
//this tagid updates the scoreboard located at: http://gmscoreboard.com/Example-Scoreboard
tagid = "5a254ef9229bf15123944891354";

//hash key
hashkey = "5a254ef922af615123944891354 ";

event_perform(ev_keypress, vk_enter)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var r_str = "null";
if ds_map_find_value(async_load, "id") == gmsb_post
   {
   if ds_map_find_value(async_load, "status") == 0
      {
      r_str = ds_map_find_value(async_load, "result");
      }
   }

//shows the json string delivered by the server, status contains errors or shows Success
show_message("Highscore upload: " + r_str);

//first decode the json string, 
//then you can get each variable by name just like gmsb_status below.
var gmsb_map = json_decode(r_str);
var gmsb_status = ds_map_find_value(gmsb_map , "status");

if (r_str != "null")
{
    room_goto(rm_initalize);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var w = display_get_gui_width();
var h = display_get_gui_height();

draw_set_color(c_black);
draw_rectangle(0, 0, w, h, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//how many scores to get, maximum 10
var getscore = 10;

//ask for the scores, this is picked up in the HTTP event
gmsb_post = http_post_string("http://gmscoreboard.com/handle_score.php?tagid="+string(tagid)+"&amp;getscore="+string(getscore),"");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>url_open("http://gmscoreboard.com/Example-Scoreboard-Secure");


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//the tagid variable is set in the create event.

//popup to enter a name
var player_name = global.nickname

//popup to enter a score
var player_score = global.playerXP;

/* Encrypting your tagid is optional, but strongly recommended.
to encrypt simply add the player name and score as a string onto the end of the hash key and use the function below to make a hash string(sha1)
your hash key can be found by editing your game info on gmscoreboard.com and TURNING ON the require hash setting. 
The hash key will be visible from your dashboard once enabled */
hash = sha1_string_utf8(string(hashkey) + string(player_name) + string(player_score));


//show_message(hash);

//send the name and score to gmscoreboard.com
gmsb_post = http_post_string("http://gmscoreboard.com/handle_score.php?tagid="+string(tagid)+
"&amp;player="+string(player_name)+
"&amp;score="+string(player_score)+
"&amp;hash="+string(hash),"");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
