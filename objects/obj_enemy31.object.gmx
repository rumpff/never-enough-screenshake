<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemyy31</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>m_speed = 14;

m_health = 0;

m_color = make_colour_hsv(random_range(120, 140), 153, 255);

alarm[0] = 10;

// Set the direction away from the player
m_moveDirection = random_range(0, 359);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(obj_player))
    exit;
    
if (global.paused)
{
    m_speed = 0;
    exit;
}
else
{
    m_speed = 14
}

    
m_moveDirection = lerp(m_moveDirection, m_moveDirection + 
angle_difference(m_moveDirection, point_direction(x ,y, obj_player.x ,obj_player.y)), 0.02);

image_blend = m_color
image_angle = m_moveDirection

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Calculate next position and move

var horizontalSpeed = lengthdir_x(m_speed, m_moveDirection);
var verticalSpeed = lengthdir_y(m_speed, m_moveDirection);

if (place_meeting(x + horizontalSpeed, y + verticalSpeed, obj_collider))
{

    for (i = 0; i &lt; abs(horizontalSpeed); i++)
    {
        if (!place_meeting(x + sign(horizontalSpeed), y, obj_collider))
        {
            x += sign(horizontalSpeed);
            m_moveDirection += 180
        } else break;
    }
    

    for (i = 0; i &lt; abs(verticalSpeed); i++)
    {
        if (!place_meeting(x, y + sign(verticalSpeed), obj_collider))
        {
            y += sign(verticalSpeed);
            m_moveDirection += 180
        } else break;
    }; 
}
else
{
    x += horizontalSpeed// * m_moveMultiplier;
    y += verticalSpeed// * m_moveMultiplier;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
